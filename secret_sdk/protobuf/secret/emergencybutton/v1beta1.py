# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: secret/emergencybutton/v1beta1/params.proto, secret/emergencybutton/v1beta1/tx.proto, secret/emergencybutton/v1beta1/genesis.proto, secret/emergencybutton/v1beta1/query.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import Optional

import betterproto
import grpclib


@dataclass
class Params(betterproto.Message):
    """Params defines the parameters for the ibc-rate-limit module."""

    switch_status: str = betterproto.string_field(1)
    pauser_address: str = betterproto.string_field(2)


@dataclass
class MsgToggleIbcSwitch(betterproto.Message):
    """
    MsgToggleIbcSwitch represents a message to toggle the emergencybutton
    status by the defined pauser.
    """

    sender: str = betterproto.string_field(1)


@dataclass
class MsgToggleIbcSwitchResponse(betterproto.Message):
    """MsgToggleIbcSwitchResponse defines the response type for the toggle."""

    pass


@dataclass
class MsgUpdateParams(betterproto.Message):
    # authority is the address of the governance account.
    authority: str = betterproto.string_field(1)
    # params defines the x/emergencybutton parameters to update. NOTE: All
    # parameters must be supplied.
    params: "Params" = betterproto.message_field(2)


@dataclass
class MsgUpdateParamsResponse(betterproto.Message):
    pass


@dataclass
class GenesisState(betterproto.Message):
    """GenesisState - genesis state of x/wasm"""

    params: "Params" = betterproto.message_field(1)


@dataclass
class ParamsRequest(betterproto.Message):
    """ParamsRequest is the request type for the Query/Params RPC method."""

    pass


@dataclass
class ParamsResponse(betterproto.Message):
    """ParamsResponse is the response type for the Query/Params RPC method."""

    # params defines the parameters of the module.
    params: "Params" = betterproto.message_field(1)


class MsgStub(betterproto.ServiceStub):
    """Msg defines the bank Msg service."""

    async def toggle_ibc_switch(
        self, *, sender: str = ""
    ) -> MsgToggleIbcSwitchResponse:
        """
        ToggleIbcSwitch defines a method for toggling the status of the
        emergencybutton.
        """

        request = MsgToggleIbcSwitch()
        request.sender = sender

        return await self._unary_unary(
            "/secret.emergencybutton.v1beta1.Msg/ToggleIbcSwitch",
            request,
            MsgToggleIbcSwitchResponse,
        )

    async def update_params(
        self, *, authority: str = "", params: Optional["Params"] = None
    ) -> MsgUpdateParamsResponse:
        request = MsgUpdateParams()
        request.authority = authority
        if params is not None:
            request.params = params

        return await self._unary_unary(
            "/secret.emergencybutton.v1beta1.Msg/UpdateParams",
            request,
            MsgUpdateParamsResponse,
        )


class QueryStub(betterproto.ServiceStub):
    """Query defines the gRPC querier service."""

    async def params(self) -> ParamsResponse:
        """
        Params defines a gRPC query method that returns the emergencybutton
        module's parameters.
        """

        request = ParamsRequest()

        return await self._unary_unary(
            "/secret.emergencybutton.v1beta1.Query/Params",
            request,
            ParamsResponse,
        )
