# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: tendermint/p2p/conn.proto, tendermint/p2p/pex.proto, tendermint/p2p/types.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List

import betterproto

from .. import crypto as _crypto__


@dataclass(eq=False, repr=False)
class NetAddress(betterproto.Message):
    id: str = betterproto.string_field(1)
    ip: str = betterproto.string_field(2)
    port: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ProtocolVersion(betterproto.Message):
    p2_p: int = betterproto.uint64_field(1)
    block: int = betterproto.uint64_field(2)
    app: int = betterproto.uint64_field(3)


@dataclass(eq=False, repr=False)
class DefaultNodeInfo(betterproto.Message):
    protocol_version: "ProtocolVersion" = betterproto.message_field(1)
    default_node_id: str = betterproto.string_field(2)
    listen_addr: str = betterproto.string_field(3)
    network: str = betterproto.string_field(4)
    version: str = betterproto.string_field(5)
    channels: bytes = betterproto.bytes_field(6)
    moniker: str = betterproto.string_field(7)
    other: "DefaultNodeInfoOther" = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class DefaultNodeInfoOther(betterproto.Message):
    tx_index: str = betterproto.string_field(1)
    rpc_address: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class PacketPing(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class PacketPong(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class PacketMsg(betterproto.Message):
    channel_id: int = betterproto.int32_field(1)
    eof: bool = betterproto.bool_field(2)
    data: bytes = betterproto.bytes_field(3)


@dataclass(eq=False, repr=False)
class Packet(betterproto.Message):
    packet_ping: "PacketPing" = betterproto.message_field(1, group="sum")
    packet_pong: "PacketPong" = betterproto.message_field(2, group="sum")
    packet_msg: "PacketMsg" = betterproto.message_field(3, group="sum")


@dataclass(eq=False, repr=False)
class AuthSigMessage(betterproto.Message):
    pub_key: "_crypto__.PublicKey" = betterproto.message_field(1)
    sig: bytes = betterproto.bytes_field(2)


@dataclass(eq=False, repr=False)
class PexRequest(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class PexAddrs(betterproto.Message):
    addrs: List["NetAddress"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class Message(betterproto.Message):
    pex_request: "PexRequest" = betterproto.message_field(1, group="sum")
    pex_addrs: "PexAddrs" = betterproto.message_field(2, group="sum")
