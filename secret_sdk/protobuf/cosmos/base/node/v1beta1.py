# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: cosmos/base/node/v1beta1/query.proto
# plugin: python-betterproto
from dataclasses import dataclass
from datetime import datetime

import betterproto
import grpclib


@dataclass
class ConfigRequest(betterproto.Message):
    """
    ConfigRequest defines the request structure for the Config gRPC query.
    """

    pass


@dataclass
class ConfigResponse(betterproto.Message):
    """
    ConfigResponse defines the response structure for the Config gRPC query.
    """

    minimum_gas_price: str = betterproto.string_field(1)
    pruning_keep_recent: str = betterproto.string_field(2)
    pruning_interval: str = betterproto.string_field(3)
    halt_height: int = betterproto.uint64_field(4)


@dataclass
class StatusRequest(betterproto.Message):
    """StateRequest defines the request structure for the status of a node."""

    pass


@dataclass
class StatusResponse(betterproto.Message):
    """
    StateResponse defines the response structure for the status of a node.
    """

    earliest_store_height: int = betterproto.uint64_field(1)
    height: int = betterproto.uint64_field(2)
    timestamp: datetime = betterproto.message_field(3)
    app_hash: bytes = betterproto.bytes_field(4)
    validator_hash: bytes = betterproto.bytes_field(5)


class ServiceStub(betterproto.ServiceStub):
    """Service defines the gRPC querier service for node related queries."""

    async def config(self) -> ConfigResponse:
        """Config queries for the operator configuration."""

        request = ConfigRequest()

        return await self._unary_unary(
            "/cosmos.base.node.v1beta1.Service/Config",
            request,
            ConfigResponse,
        )

    async def status(self) -> StatusResponse:
        """Status queries for the node status."""

        request = StatusRequest()

        return await self._unary_unary(
            "/cosmos.base.node.v1beta1.Service/Status",
            request,
            StatusResponse,
        )
