# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: cosmos/base/tendermint/v1beta1/types.proto, cosmos/base/tendermint/v1beta1/query.proto
# plugin: python-betterproto
from dataclasses import dataclass
from datetime import datetime
from typing import List, Optional

import betterproto
import grpclib

from .cosmos.base.query import v1beta1
from .google import protobuf
from .tendermint import p2p
from .tendermint import types
from .tendermint import version


@dataclass
class Block(betterproto.Message):
    """
    Block is tendermint type Block, with the Header proposer address field
    converted to bech32 string.
    """

    header: "Header" = betterproto.message_field(1)
    data: types.Data = betterproto.message_field(2)
    evidence: types.EvidenceList = betterproto.message_field(3)
    last_commit: types.Commit = betterproto.message_field(4)


@dataclass
class Header(betterproto.Message):
    """Header defines the structure of a Tendermint block header."""

    # basic block info
    version: version.Consensus = betterproto.message_field(1)
    chain_id: str = betterproto.string_field(2)
    height: int = betterproto.int64_field(3)
    time: datetime = betterproto.message_field(4)
    # prev block info
    last_block_id: types.BlockID = betterproto.message_field(5)
    # hashes of block data
    last_commit_hash: bytes = betterproto.bytes_field(6)
    data_hash: bytes = betterproto.bytes_field(7)
    # hashes from the app output from the prev block
    validators_hash: bytes = betterproto.bytes_field(8)
    next_validators_hash: bytes = betterproto.bytes_field(9)
    consensus_hash: bytes = betterproto.bytes_field(10)
    app_hash: bytes = betterproto.bytes_field(11)
    last_results_hash: bytes = betterproto.bytes_field(12)
    # consensus info
    evidence_hash: bytes = betterproto.bytes_field(13)
    # proposer_address is the original block proposer address, formatted as a
    # Bech32 string. In Tendermint, this type is `bytes`, but in the SDK, we
    # convert it to a Bech32 string for better UX.
    proposer_address: str = betterproto.string_field(14)


@dataclass
class GetValidatorSetByHeightRequest(betterproto.Message):
    """
    GetValidatorSetByHeightRequest is the request type for the
    Query/GetValidatorSetByHeight RPC method.
    """

    height: int = betterproto.int64_field(1)
    # pagination defines an pagination for the request.
    pagination: v1beta1.PageRequest = betterproto.message_field(2)


@dataclass
class GetValidatorSetByHeightResponse(betterproto.Message):
    """
    GetValidatorSetByHeightResponse is the response type for the
    Query/GetValidatorSetByHeight RPC method.
    """

    block_height: int = betterproto.int64_field(1)
    validators: List["Validator"] = betterproto.message_field(2)
    # pagination defines an pagination for the response.
    pagination: v1beta1.PageResponse = betterproto.message_field(3)


@dataclass
class GetLatestValidatorSetRequest(betterproto.Message):
    """
    GetLatestValidatorSetRequest is the request type for the
    Query/GetValidatorSetByHeight RPC method.
    """

    # pagination defines an pagination for the request.
    pagination: v1beta1.PageRequest = betterproto.message_field(1)


@dataclass
class GetLatestValidatorSetResponse(betterproto.Message):
    """
    GetLatestValidatorSetResponse is the response type for the
    Query/GetValidatorSetByHeight RPC method.
    """

    block_height: int = betterproto.int64_field(1)
    validators: List["Validator"] = betterproto.message_field(2)
    # pagination defines an pagination for the response.
    pagination: v1beta1.PageResponse = betterproto.message_field(3)


@dataclass
class Validator(betterproto.Message):
    """Validator is the type for the validator-set."""

    address: str = betterproto.string_field(1)
    pub_key: protobuf.Any = betterproto.message_field(2)
    voting_power: int = betterproto.int64_field(3)
    proposer_priority: int = betterproto.int64_field(4)


@dataclass
class GetBlockByHeightRequest(betterproto.Message):
    """
    GetBlockByHeightRequest is the request type for the Query/GetBlockByHeight
    RPC method.
    """

    height: int = betterproto.int64_field(1)


@dataclass
class GetBlockByHeightResponse(betterproto.Message):
    """
    GetBlockByHeightResponse is the response type for the
    Query/GetBlockByHeight RPC method.
    """

    block_id: types.BlockID = betterproto.message_field(1)
    # Deprecated: please use `sdk_block` instead
    block: types.Block = betterproto.message_field(2)
    # Since: cosmos-sdk 0.47
    sdk_block: "Block" = betterproto.message_field(3)


@dataclass
class GetLatestBlockRequest(betterproto.Message):
    """
    GetLatestBlockRequest is the request type for the Query/GetLatestBlock RPC
    method.
    """

    pass


@dataclass
class GetLatestBlockResponse(betterproto.Message):
    """
    GetLatestBlockResponse is the response type for the Query/GetLatestBlock
    RPC method.
    """

    block_id: types.BlockID = betterproto.message_field(1)
    # Deprecated: please use `sdk_block` instead
    block: types.Block = betterproto.message_field(2)
    # Since: cosmos-sdk 0.47
    sdk_block: "Block" = betterproto.message_field(3)


@dataclass
class GetSyncingRequest(betterproto.Message):
    """
    GetSyncingRequest is the request type for the Query/GetSyncing RPC method.
    """

    pass


@dataclass
class GetSyncingResponse(betterproto.Message):
    """
    GetSyncingResponse is the response type for the Query/GetSyncing RPC
    method.
    """

    syncing: bool = betterproto.bool_field(1)


@dataclass
class GetNodeInfoRequest(betterproto.Message):
    """
    GetNodeInfoRequest is the request type for the Query/GetNodeInfo RPC
    method.
    """

    pass


@dataclass
class GetNodeInfoResponse(betterproto.Message):
    """
    GetNodeInfoResponse is the response type for the Query/GetNodeInfo RPC
    method.
    """

    default_node_info: p2p.DefaultNodeInfo = betterproto.message_field(1)
    application_version: "VersionInfo" = betterproto.message_field(2)


@dataclass
class VersionInfo(betterproto.Message):
    """VersionInfo is the type for the GetNodeInfoResponse message."""

    name: str = betterproto.string_field(1)
    app_name: str = betterproto.string_field(2)
    version: str = betterproto.string_field(3)
    git_commit: str = betterproto.string_field(4)
    build_tags: str = betterproto.string_field(5)
    go_version: str = betterproto.string_field(6)
    build_deps: List["Module"] = betterproto.message_field(7)
    # Since: cosmos-sdk 0.43
    cosmos_sdk_version: str = betterproto.string_field(8)


@dataclass
class Module(betterproto.Message):
    """Module is the type for VersionInfo"""

    # module path
    path: str = betterproto.string_field(1)
    # module version
    version: str = betterproto.string_field(2)
    # checksum
    sum: str = betterproto.string_field(3)


@dataclass
class ABCIQueryRequest(betterproto.Message):
    """
    ABCIQueryRequest defines the request structure for the ABCIQuery gRPC
    query.
    """

    data: bytes = betterproto.bytes_field(1)
    path: str = betterproto.string_field(2)
    height: int = betterproto.int64_field(3)
    prove: bool = betterproto.bool_field(4)


@dataclass
class ABCIQueryResponse(betterproto.Message):
    """
    ABCIQueryResponse defines the response structure for the ABCIQuery gRPC
    query. Note: This type is a duplicate of the ResponseQuery proto type
    defined in Tendermint.
    """

    code: int = betterproto.uint32_field(1)
    log: str = betterproto.string_field(3)
    info: str = betterproto.string_field(4)
    index: int = betterproto.int64_field(5)
    key: bytes = betterproto.bytes_field(6)
    value: bytes = betterproto.bytes_field(7)
    proof_ops: "ProofOps" = betterproto.message_field(8)
    height: int = betterproto.int64_field(9)
    codespace: str = betterproto.string_field(10)


@dataclass
class ProofOp(betterproto.Message):
    """
    ProofOp defines an operation used for calculating Merkle root. The data
    could be arbitrary format, providing necessary data for example
    neighbouring node hash. Note: This type is a duplicate of the ProofOp proto
    type defined in Tendermint.
    """

    type: str = betterproto.string_field(1)
    key: bytes = betterproto.bytes_field(2)
    data: bytes = betterproto.bytes_field(3)


@dataclass
class ProofOps(betterproto.Message):
    """
    ProofOps is Merkle proof defined by the list of ProofOps. Note: This type
    is a duplicate of the ProofOps proto type defined in Tendermint.
    """

    ops: List["ProofOp"] = betterproto.message_field(1)


class ServiceStub(betterproto.ServiceStub):
    """Service defines the gRPC querier service for tendermint queries."""

    async def get_node_info(self) -> GetNodeInfoResponse:
        """GetNodeInfo queries the current node info."""

        request = GetNodeInfoRequest()

        return await self._unary_unary(
            "/cosmos.base.tendermint.v1beta1.Service/GetNodeInfo",
            request,
            GetNodeInfoResponse,
        )

    async def get_syncing(self) -> GetSyncingResponse:
        """GetSyncing queries node syncing."""

        request = GetSyncingRequest()

        return await self._unary_unary(
            "/cosmos.base.tendermint.v1beta1.Service/GetSyncing",
            request,
            GetSyncingResponse,
        )

    async def get_latest_block(self) -> GetLatestBlockResponse:
        """GetLatestBlock returns the latest block."""

        request = GetLatestBlockRequest()

        return await self._unary_unary(
            "/cosmos.base.tendermint.v1beta1.Service/GetLatestBlock",
            request,
            GetLatestBlockResponse,
        )

    async def get_block_by_height(self, *, height: int = 0) -> GetBlockByHeightResponse:
        """GetBlockByHeight queries block for given height."""

        request = GetBlockByHeightRequest()
        request.height = height

        return await self._unary_unary(
            "/cosmos.base.tendermint.v1beta1.Service/GetBlockByHeight",
            request,
            GetBlockByHeightResponse,
        )

    async def get_latest_validator_set(
        self, *, pagination: Optional[v1beta1.PageRequest] = None
    ) -> GetLatestValidatorSetResponse:
        """GetLatestValidatorSet queries latest validator-set."""

        request = GetLatestValidatorSetRequest()
        if pagination is not None:
            request.pagination = pagination

        return await self._unary_unary(
            "/cosmos.base.tendermint.v1beta1.Service/GetLatestValidatorSet",
            request,
            GetLatestValidatorSetResponse,
        )

    async def get_validator_set_by_height(
        self, *, height: int = 0, pagination: Optional[v1beta1.PageRequest] = None
    ) -> GetValidatorSetByHeightResponse:
        """GetValidatorSetByHeight queries validator-set at a given height."""

        request = GetValidatorSetByHeightRequest()
        request.height = height
        if pagination is not None:
            request.pagination = pagination

        return await self._unary_unary(
            "/cosmos.base.tendermint.v1beta1.Service/GetValidatorSetByHeight",
            request,
            GetValidatorSetByHeightResponse,
        )

    async def a_b_c_i_query(
        self, *, data: bytes = b"", path: str = "", height: int = 0, prove: bool = False
    ) -> ABCIQueryResponse:
        """
        ABCIQuery defines a query handler that supports ABCI queries directly
        to the application, bypassing Tendermint completely. The ABCI query
        must contain a valid and supported path, including app, custom, p2p,
        and store. Since: cosmos-sdk 0.46
        """

        request = ABCIQueryRequest()
        request.data = data
        request.path = path
        request.height = height
        request.prove = prove

        return await self._unary_unary(
            "/cosmos.base.tendermint.v1beta1.Service/ABCIQuery",
            request,
            ABCIQueryResponse,
        )
