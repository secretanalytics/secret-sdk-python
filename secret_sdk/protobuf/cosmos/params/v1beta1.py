# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: cosmos/params/v1beta1/params.proto, cosmos/params/v1beta1/query.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List

import betterproto
import grpclib


@dataclass
class ParameterChangeProposal(betterproto.Message):
    """
    ParameterChangeProposal defines a proposal to change one or more
    parameters.
    """

    title: str = betterproto.string_field(1)
    description: str = betterproto.string_field(2)
    changes: List["ParamChange"] = betterproto.message_field(3)


@dataclass
class ParamChange(betterproto.Message):
    """
    ParamChange defines an individual parameter change, for use in
    ParameterChangeProposal.
    """

    subspace: str = betterproto.string_field(1)
    key: str = betterproto.string_field(2)
    value: str = betterproto.string_field(3)


@dataclass
class QueryParamsRequest(betterproto.Message):
    """QueryParamsRequest is request type for the Query/Params RPC method."""

    # subspace defines the module to query the parameter for.
    subspace: str = betterproto.string_field(1)
    # key defines the key of the parameter in the subspace.
    key: str = betterproto.string_field(2)


@dataclass
class QueryParamsResponse(betterproto.Message):
    """
    QueryParamsResponse is response type for the Query/Params RPC method.
    """

    # param defines the queried parameter.
    param: "ParamChange" = betterproto.message_field(1)


@dataclass
class QuerySubspacesRequest(betterproto.Message):
    """
    QuerySubspacesRequest defines a request type for querying for all
    registered subspaces and all keys for a subspace. Since: cosmos-sdk 0.46
    """

    pass


@dataclass
class QuerySubspacesResponse(betterproto.Message):
    """
    QuerySubspacesResponse defines the response types for querying for all
    registered subspaces and all keys for a subspace. Since: cosmos-sdk 0.46
    """

    subspaces: List["Subspace"] = betterproto.message_field(1)


@dataclass
class Subspace(betterproto.Message):
    """
    Subspace defines a parameter subspace name and all the keys that exist for
    the subspace. Since: cosmos-sdk 0.46
    """

    subspace: str = betterproto.string_field(1)
    keys: List[str] = betterproto.string_field(2)


class QueryStub(betterproto.ServiceStub):
    """Query defines the gRPC querier service."""

    async def params(self, *, subspace: str = "", key: str = "") -> QueryParamsResponse:
        """
        Params queries a specific parameter of a module, given its subspace and
        key.
        """

        request = QueryParamsRequest()
        request.subspace = subspace
        request.key = key

        return await self._unary_unary(
            "/cosmos.params.v1beta1.Query/Params",
            request,
            QueryParamsResponse,
        )

    async def subspaces(self) -> QuerySubspacesResponse:
        """
        Subspaces queries for all registered subspaces and all keys for a
        subspace. Since: cosmos-sdk 0.46
        """

        request = QuerySubspacesRequest()

        return await self._unary_unary(
            "/cosmos.params.v1beta1.Query/Subspaces",
            request,
            QuerySubspacesResponse,
        )
