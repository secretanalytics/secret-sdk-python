# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: cosmos/consensus/v1/tx.proto, cosmos/consensus/v1/query.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import Optional

import betterproto
import grpclib

from .tendermint import types


@dataclass
class MsgUpdateParams(betterproto.Message):
    """MsgUpdateParams is the Msg/UpdateParams request type."""

    # authority is the address that controls the module (defaults to x/gov unless
    # overwritten).
    authority: str = betterproto.string_field(1)
    # params defines the x/consensus parameters to update. VersionsParams is not
    # included in this Msg because it is tracked separarately in x/upgrade. NOTE:
    # All parameters must be supplied.
    block: types.BlockParams = betterproto.message_field(2)
    evidence: types.EvidenceParams = betterproto.message_field(3)
    validator: types.ValidatorParams = betterproto.message_field(4)
    # Since: cosmos-sdk 0.50
    abci: types.ABCIParams = betterproto.message_field(5)


@dataclass
class MsgUpdateParamsResponse(betterproto.Message):
    """
    MsgUpdateParamsResponse defines the response structure for executing a
    MsgUpdateParams message.
    """

    pass


@dataclass
class QueryParamsRequest(betterproto.Message):
    """
    QueryParamsRequest defines the request type for querying x/consensus
    parameters.
    """

    pass


@dataclass
class QueryParamsResponse(betterproto.Message):
    """
    QueryParamsResponse defines the response type for querying x/consensus
    parameters.
    """

    # params are the tendermint consensus params stored in the consensus module.
    # Please note that `params.version` is not populated in this response, it is
    # tracked separately in the x/upgrade module.
    params: types.ConsensusParams = betterproto.message_field(1)


class MsgStub(betterproto.ServiceStub):
    """Msg defines the consensus Msg service."""

    async def update_params(
        self,
        *,
        authority: str = "",
        block: Optional[types.BlockParams] = None,
        evidence: Optional[types.EvidenceParams] = None,
        validator: Optional[types.ValidatorParams] = None,
        abci: Optional[types.ABCIParams] = None,
    ) -> MsgUpdateParamsResponse:
        """
        UpdateParams defines a governance operation for updating the
        x/consensus module parameters. The authority is defined in the keeper.
        Since: cosmos-sdk 0.47
        """

        request = MsgUpdateParams()
        request.authority = authority
        if block is not None:
            request.block = block
        if evidence is not None:
            request.evidence = evidence
        if validator is not None:
            request.validator = validator
        if abci is not None:
            request.abci = abci

        return await self._unary_unary(
            "/cosmos.consensus.v1.Msg/UpdateParams",
            request,
            MsgUpdateParamsResponse,
        )


class QueryStub(betterproto.ServiceStub):
    """Query defines the gRPC querier service."""

    async def params(self) -> QueryParamsResponse:
        """Params queries the parameters of x/consensus module."""

        request = QueryParamsRequest()

        return await self._unary_unary(
            "/cosmos.consensus.v1.Query/Params",
            request,
            QueryParamsResponse,
        )
